<?xml version="1.0" encoding="utf-8"?>
<openerp>
    <data noupdate="1">

        <record id="lct_hr.hr_salary_rule_4" model="hr.salary.rule">
            <field name="name">Togo - Basic</field>
            <field name="amount_select">percentage</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">1000</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage">100</field>
            <field name="amount_percentage_base">contract.wage</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = contract.wage * 0.10
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">1000</field>
        </record>

        <record id="lct_hr.hr_salary_rule_5" model="hr.salary.rule">
            <field name="name">Togo - Seniority</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">1001</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage"></field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
wage = contract.wage if contract.wage else 0.0
sen_rate = payslip.seniority_rate if payslip.seniority_rate else 0.0
result = wage * sen_rate
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">1001</field>
        </record>

        <record id="lct_hr.hr_salary_rule_6" model="hr.salary.rule">
            <field name="name">Togo - Benefits</field>
            <field name="amount_select">percentage</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">1002</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage">100</field>
            <field name="amount_percentage_base">contract.benefits_in_kind</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = contract.wage * 0.10
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">1002</field>
        </record>

        <record id="lct_hr.hr_salary_rule_28" model="hr.salary.rule">
            <field name="name">Togo - Overtime</field>
            <field name="amount_select">percentage</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">1003</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage">100</field>
            <field name="amount_percentage_base">employee.overtime</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = contract.wage * 0.10
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">1003</field>
        </record>

        <record id="lct_hr.hr_salary_rule_7" model="hr.salary.rule">
            <field name="name">Togo - Transportation allowance</field>
            <field name="amount_select">percentage</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="code">1004</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage">100</field>
            <field name="amount_percentage_base">contract.transport_allowance</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = contract.wage * 0.10
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">1004</field>
        </record>

        <record id="lct_hr.hr_salary_rule_8" model="hr.salary.rule">
            <field name="name">Togo - Representation allowance</field>
            <field name="amount_select">percentage</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="code">1005</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage">100</field>
            <field name="amount_percentage_base">contract.representation_allowance</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = contract.wage * 0.10
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">1005</field>
        </record>

        <record id="lct_hr.hr_salary_rule_9" model="hr.salary.rule">
            <field name="name">Togo - Individual allowance</field>
            <field name="amount_select">percentage</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="code">1006</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage">100</field>
            <field name="amount_percentage_base">contract.individual_allowance</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = contract.wage * 0.10
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">1006</field>
        </record>

        <record id="lct_hr.hr_salary_rule_10" model="hr.salary.rule">
            <field name="name">Togo - Performance allowance</field>
            <field name="amount_select">percentage</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="code">1007</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage">100</field>
            <field name="amount_percentage_base">contract.performance_allowance</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = contract.wage * 0.10
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">1007</field>
        </record>

        <record id="lct_hr.hr_salary_rule_11" model="hr.salary.rule">
            <field name="name">Togo - Other Allowances</field>
            <field name="amount_select">percentage</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="code">1008</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage">100</field>
            <field name="amount_percentage_base">contract.other_allowances</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = contract.wage * 0.10
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">1008</field>
        </record>

        <record id="lct_hr.hr_salary_rule_12" model="hr.salary.rule">
            <field name="name">Togo - Gross</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="hr_payroll.GROSS"/>
            <field name="code">Gross</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage"></field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = categories.BASIC + categories.ALLOWANCE
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">1999</field>
        </record>

        <record id="lct_hr.hr_salary_rule_13" model="hr.salary.rule">
            <field name="name">Togo - CNSS</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="lct_hr.hr_salary_rule_category_cnss"/>
            <field name="code">2000</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage"></field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = categories.GROSS * -0.04
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">2000</field>
        </record>

        <record id="lct_hr.hr_salary_rule_14" model="hr.salary.rule">
            <field name="name">Togo - Professional Tax</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="lct_hr.hr_salary_rule_category_proftax"/>
            <field name="code">2030</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage"></field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = (categories.GROSS + categories.CNSS) * -0.1
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">2030</field>
        </record>

        <record id="lct_hr.hr_salary_rule_15" model="hr.salary.rule">
            <field name="name">Togo - Tax Allowance</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="lct_hr.hr_salary_rule_category_taxal"/>
            <field name="code">2031</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage"></field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
base = categories.GROSS + categories.CNSS + categories.PROFTAX
result = base * -0.15 if base &lt;= 10000000 else base * -0.5
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">2031</field>
        </record>

        <record id="lct_hr.hr_salary_rule_16" model="hr.salary.rule">
            <field name="name">Togo - Dependents</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="lct_hr.hr_salary_rule_category_dependents"/>
            <field name="code">2032</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage"></field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = min(432000, 72000*employee.nbr_dependents) * -1
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">2032</field>
        </record>

        <record id="lct_hr.hr_salary_rule_17" model="hr.salary.rule">
            <field name="name">Togo - Pension or Annuities</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="lct_hr.hr_salary_rule_category_pension"/>
            <field name="code">2034</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage">-100</field>
            <field name="amount_percentage_base">contract.pension_annuities</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = contract.pension_annuities * -1
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">2034</field>
        </record>

        <record id="lct_hr.hr_salary_rule_18" model="hr.salary.rule">
            <field name="name">Togo - Interests on mortgages</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="lct_hr.hr_salary_rule_category_pension"/>
            <field name="code">2033</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage">-100</field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = employee.mortgage_interests * -1
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">2033</field>
        </record>

        <record id="lct_hr.hr_salary_rule_19" model="hr.salary.rule">
            <field name="name">Togo - Life Insurance</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="lct_hr.hr_salary_rule_category_pension"/>
            <field name="code">2034</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage">100</field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = contract.life_insurance * -1
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">2035</field>
        </record>

        <record id="lct_hr.hr_salary_rule_20" model="hr.salary.rule">
            <field name="name">Togo – NTS</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="lct_hr.hr_salary_rule_category_nts"/>
            <field name="code">NTS</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage"></field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = 1000 * ((categories.GROSS + categories.CNSS + categories.PROFTAX + categories.TAXAL + categories.NTS_DED)//1000)
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">2099</field>
        </record>

        <record id="lct_hr.hr_salary_rule_21" model="hr.salary.rule">
            <field name="name">Togo - TCS</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="lct_hr.hr_salary_rule_category_tcs"/>
            <field name="code">2010</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage"></field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
if categories.NTS &lt;= 900000:
    result = 3000
elif categories.NTS &lt;= 4000000:
    result = 4500
elif categories.NTS &lt;= 6000000:
    result = 6000
elif categories.NTS &lt;= 10000000:
    result = 7500
elif categories.NTS &lt;= 15000000:
    result = 9000
else:
    result = 10500
result = -result
            </field>
            <field name="condition_python">
# Available variables:
#---------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">4010</field>
        </record>

        <record id="lct_hr.hr_salary_rule_22" model="hr.salary.rule">
            <field name="name">Togo - IRPP</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="lct_hr.hr_salary_rule_category_irpp"/>
            <field name="code">2020</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage"></field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
nts = categories.NTS
result = 0
if nts &gt; 15000000:
    result += 0.35 * (nts - 15000000)
    nts = 15000000
if nts &gt; 10000000:
    result += 0.3 * (nts - 10000000)
    nts = 10000000
if nts &gt; 6000000:
    result += 0.25 * (nts - 6000000)
    nts = 6000000
if nts &gt; 4000000:
    result += 0.15 * (nts - 4000000)
    nts = 4000000
if nts &gt; 900000:
    result += 0.07 * (nts - 900000)
result = -result
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">4020</field>
        </record>

        <record id="lct_hr.hr_salary_rule_23" model="hr.salary.rule">
            <field name="name">Togo - Advance on salary</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="lct_hr.hr_salary_rule_category_other_ded"/>
            <field name="code">3000</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage"></field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = employee.advance_on_salary * -1
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">3000</field>
        </record>

        <record id="lct_hr.hr_salary_rule_24" model="hr.salary.rule">
            <field name="name">Togo - Loan repayments</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="lct_hr.hr_salary_rule_category_other_ded"/>
            <field name="code">3001</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage"></field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = employee.loan_repayments * -1
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">3001</field>
        </record>

        <record id="lct_hr.hr_salary_rule_25" model="hr.salary.rule">
            <field name="name">Togo - Other deductions</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="lct_hr.hr_salary_rule_category_other_ded"/>
            <field name="code">3002</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage"></field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = employee.other_deductions * -1
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">3002</field>
        </record>

        <record id="lct_hr.hr_salary_rule_26" model="hr.salary.rule">
            <field name="name">Togo - Total Other deductions</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="lct_hr.hr_salary_rule_category_other_ded_tot"/>
            <field name="code">Total Other deductions</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage"></field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = categories.OTHER_DED
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">3100</field>
        </record>

        <record id="lct_hr.hr_salary_rule_27" model="hr.salary.rule">
            <field name="name">Togo - To pay</field>
            <field name="amount_select">code</field>
            <field name="active">True</field>
            <field name="appears_on_payslip">True</field>
            <field name="category_id" ref="hr_payroll.NET"/>
            <field name="code">To Pay</field>
            <field name="register_id"></field>
            <field name="note"></field>
            <field name="amount_fix"></field>
            <field name="condition_range_max"></field>
            <field name="condition_range_min"></field>
            <field name="parent_rule_id"></field>
            <field name="amount_percentage"></field>
            <field name="amount_percentage_base"></field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# Note: returned value have to be set in the variable 'result'
result = 1000 * ((categories.NTS + categories.TCS + categories.IRPP + categories.PROFTAX + categories.CNSS + categories.OTHER_DED_TOT)//1000)
            </field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs
# Note: returned value have to be set in the variable 'result'
result = rules.NET &gt; categories.NET * 0.10
            </field>
            <field name="quantity">1</field>
            <field name="condition_range">contract.wage</field>
            <field name="sequence">5000</field>
        </record>

    </data>
</openerp>
